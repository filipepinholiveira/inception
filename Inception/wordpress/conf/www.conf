
# Este arquivo de configuração define como o PHP-FPM deve ser executado para servir as solicitações PHP no servidor. 
# Ele ajusta o número de processos de forma dinâmica, permite até 30 processos simultâneos 
# e define limites de como esses processos devem ser criados e reciclados. 
# O PHP-FPM também está configurado para ouvir na porta 9000, e as permissões são configuradas para o usuário www-data, que é padrão para servidores web.

[www]

# O arquivo www.conf é o arquivo de configuração do pool de processos do PHP-FPM (FastCGI Process Manager) 
# que gerencia as solicitações de PHP. Neste caso, o arquivo está configurado para o ambiente de um servidor WordPress. 
# Define o nome do pool de processos, neste caso, o pool é chamado www.
# Um pool de processos é uma coleção de processos independentes gerenciados pelo PHP-FPM. 
# Cada pool é configurado separadamente e pode ter diferentes parâmetros de desempenho, usuários, grupos e configurações de escuta (porta ou socket). 
# O PHP-FPM cria esses processos para atender solicitações de clientes (navegadores) enviadas por meio do servidor web

user = www-data 
# Define o usuário sob o qual os processos do PHP-FPM serão executados. 
# Aqui, o usuário é www-data, um usuário padrão utilizado para processos de servidor web como o Nginx e o Apache.

group = www-data
# Define o grupo ao qual os processos do PHP-FPM pertencerão. Também é o grupo www-data, garantindo que o servidor web tenha as permissões corretas.

listen = 9000
# Especifica o endereço e a porta onde o PHP-FPM vai escutar. 
# Neste caso, o PHP-FPM está configurado para ouvir na porta 9000 em todos os endereços disponíveis. 
# Isso permite que o servidor web (por exemplo, Nginx ou Apache) envie solicitações para o PHP-FPM processar

pm = dynamic
# Define o método de gerenciamento de processos (Process Manager, ou "pm"). 
# No modo dynamic, o PHP-FPM ajusta dinamicamente o número de processos de acordo com a carga, criando ou destruindo processos conforme necessário.

pm.max_children = 30
# Define o número máximo de processos filhos que o PHP-FPM pode criar. 
# Este valor limita o número de solicitações simultâneas que podem ser processadas. 
# No caso, o limite é 30 processos.

pm.start_servers = 3
# Indica quantos processos devem ser iniciados quando o PHP-FPM é iniciado. Aqui, o PHP-FPM começa com 3 servidores.

pm.min_spare_servers = 3
# Define o número mínimo de processos de reserva (inativos) que devem estar disponíveis. 
# Se houver menos do que 3 processos disponíveis, novos serão criados.

pm.max_spare_servers = 10
# Define o número máximo de processos de reserva (inativos) permitidos. 
# Se houver mais do que 10 processos inativos, os excedentes serão eliminados.

pm.max_requests = 1000
# Limita o número de solicitações que um único processo pode processar antes de ser reiniciado. 
# Aqui, cada processo pode processar até 1000 solicitações antes de ser reciclado. 
# Isso ajuda a evitar problemas de memória e "leaks" de longo prazo.

pm.status_path = /status
# Define uma URL de status para o PHP-FPM. 
# Quando acessado, este endpoint mostra informações de status sobre os processos ativos, 
# uso de memória e desempenho geral. Isso pode ser útil para monitoramento.

clear_env = no
# Esta opção define se o ambiente (variáveis de ambiente) deve ser limpo ao iniciar os processos de PHP. 
# Aqui, está definido como no, o que significa que as variáveis de ambiente não serão removidas. 
# Isso pode ser importante se você precisar que o PHP tenha acesso a essas variáveis.

